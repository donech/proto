syntax = "proto3";

package donech.gate.v1;

option go_package = "gatev1";
option java_multiple_files = true;
option java_outer_classname = "GateApiProto";
option java_package = "com.donech.gate.v1";
option php_namespace = "Donech\\Gate\\V1";

import "google/api/annotations.proto";

//GateAPI 大门口.
service GateAPI {
  //Login 登陆.
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }
  //Logout.
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }
  //Readiness.
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get: "/api/v1/readiness"
    };
  }
  //Liveness.
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/api/v1/liveness"
    };
  }
}

//LoginRequest.
message LoginRequest {
  string username = 1;
  string password = 2;
  string type = 3;
  bool auto_login = 4;
}

//LoginResponse.
message LoginResponse {
  int32 code = 1;
  string msg = 2;
  string token = 3;
}

//LogoutRequest.
message LogoutRequest {
  string token = 1;
}

//LogoutResponse.
message LogoutResponse {
  int32 code = 1;
  string msg = 2;
}

//ReadinessRequest.
message ReadinessRequest {}

//ReadinessResponse.
message ReadinessResponse {
  int32 code = 1;
  string msg = 2;
}

//LivenessRequest.
message LivenessRequest {}

//LivenessResponse.
message LivenessResponse {
  int32 code = 1;
  string msg = 2;
}
